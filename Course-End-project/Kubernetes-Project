

mkdir project2

cd project2

vim deployment-mysql.yml

apiVersion: apps/v1
kind: Deployment
metadata:
 name: mysql
spec:
 replicas: 1
 selector:
  matchLabels:
   app: mysql-wordpress
 template:
  metadata:
   labels:
    app: mysql-wordpress
    product: mysql
  spec:
   containers:
     - name: mysql-container
       image: mysql
       env:
       - name: MYSQL_ROOT_PASSWORD
         value: password
       - name: MYSQL_DATABASE
         value: wordpress

---
apiVersion: v1
kind: Service
metadata:
 name: mysql
spec:
 type: ClusterIP
 ports:
  - targetPort: 3306
    port: 3306
 selector:
  app: mysql-wordpress
  product: mysql



Save the file


# kubectl create -f deployment-mysql.yml

# kubectl get all

If you wish to check the wordpressDB in the mysql pod


# kubectl exec -it <podname> -- bash

# mysql -u root -ppassword

# show databases;

you will see wordpress DB in it

give exit to come out of DB

give exit to comeout of container


# vim deploy-wordpress.yml

apiVersion: apps/v1
kind: Deployment
metadata:
 name: wordpress
spec:
 replicas: 1
 selector:
  matchLabels:
   app: mysql-wordpress
   tier: frontend
 template:
  metadata:
   labels:
    app: mysql-wordpress
    tier: frontend
  spec:
   containers:
    - name: wordpress-container
      image: wordpress
      env:
      - name: WORDPRESS_DB_HOST
        value: mysql
      - name: WORDPRESS_DB_USER
        value: root
      - name: WORDPRESS_DB_PASSWORD
        value: password
      
---
apiVersion: v1
kind: Service
metadata:
 name: wordpress
spec:
 type: NodePort
 ports:
  - targetPort: 80
    port: 80
 selector:
  app: mysql-wordpress
  tier: frontend


# kubectl create -f deploy-wordpress.yml

# kubectl get all

copy the nodeport given in 5 digits

open the browser

give the URL :  localhost:<giveyourNodePort>


Yoyu will see wordpress

enter the details as shown on the page.

Now go back to the terminal and log into mysql pod

# kubectl exec -it <mysql-podname> -- bash

# mysql -u root -ppassword

# show databases;

# use wordpress;

# show tables;

# select * from wp_users;

You will see entry of your users



you will see wordpress DB in it

give exit to come out of DB

give exit to comeout of container








